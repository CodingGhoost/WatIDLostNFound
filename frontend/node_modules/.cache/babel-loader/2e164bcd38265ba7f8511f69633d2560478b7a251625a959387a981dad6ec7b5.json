{"ast":null,"code":"var _jsxFileName = \"/Users/Wayne/Documents/Test_LF/id-lost-and-found/src/IdInfoPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IdInfoPage() {\n  _s();\n  const {\n    idNumber\n  } = useParams(); // Get the idNumber from the URL\n\n  // Simulated database with additional info\n  const simulatedResults = [{\n    id: 1,\n    name: \"John Doe\",\n    idNumber: \"20040022\",\n    location: \"Library\",\n    contact: \"johndoe@gmail.com\"\n  }, {\n    id: 2,\n    name: \"Jane Smith\",\n    idNumber: \"2110\",\n    location: \"Cafeteria\",\n    contact: \"janesmith@domain.com\"\n  }];\n  const selectedId = simulatedResults.find(item => item.idNumber === idNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"id-info-container\",\n    children: selectedId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ID Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", selectedId.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID Number: \", selectedId.idNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Found at: \", selectedId.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contact: \", selectedId.contact]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No information available for this ID.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(IdInfoPage, \"1B4SUaHShEKqLx+iZpHr/Rm+jTs=\", false, function () {\n  return [useParams];\n});\n_c = IdInfoPage;\nexport default IdInfoPage;\nvar _c;\n$RefreshReg$(_c, \"IdInfoPage\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","IdInfoPage","_s","idNumber","simulatedResults","id","name","location","contact","selectedId","find","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Wayne/Documents/Test_LF/id-lost-and-found/src/IdInfoPage.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction IdInfoPage() {\n  const { idNumber } = useParams();  // Get the idNumber from the URL\n\n  // Simulated database with additional info\n  const simulatedResults = [\n    { id: 1, name: \"John Doe\", idNumber: \"20040022\", location: \"Library\", contact: \"johndoe@gmail.com\" },\n    { id: 2, name: \"Jane Smith\", idNumber: \"2110\", location: \"Cafeteria\", contact: \"janesmith@domain.com\" }\n  ];\n\n  const selectedId = simulatedResults.find(item => item.idNumber === idNumber);\n\n  return (\n    <div className=\"id-info-container\">\n      {selectedId ? (\n        <div>\n          <h2>ID Information</h2>\n          <p>Name: {selectedId.name}</p>\n          <p>ID Number: {selectedId.idNumber}</p>\n          <p>Found at: {selectedId.location}</p>\n          <p>Contact: {selectedId.contact}</p> {/* Sensitive information */}\n        </div>\n      ) : (\n        <p>No information available for this ID.</p>\n      )}\n    </div>\n  );\n}\n\nexport default IdInfoPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAS,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAE;;EAEnC;EACA,MAAMM,gBAAgB,GAAG,CACvB;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEH,QAAQ,EAAE,UAAU;IAAEI,QAAQ,EAAE,SAAS;IAAEC,OAAO,EAAE;EAAoB,CAAC,EACpG;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEH,QAAQ,EAAE,MAAM;IAAEI,QAAQ,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAuB,CAAC,CACxG;EAED,MAAMC,UAAU,GAAGL,gBAAgB,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACR,QAAQ,KAAKA,QAAQ,CAAC;EAE5E,oBACEH,OAAA;IAAKY,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/BJ,UAAU,gBACTT,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBjB,OAAA;QAAAa,QAAA,GAAG,QAAM,EAACJ,UAAU,CAACH,IAAI;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BjB,OAAA;QAAAa,QAAA,GAAG,aAAW,EAACJ,UAAU,CAACN,QAAQ;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCjB,OAAA;QAAAa,QAAA,GAAG,YAAU,EAACJ,UAAU,CAACF,QAAQ;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCjB,OAAA;QAAAa,QAAA,GAAG,WAAS,EAACJ,UAAU,CAACD,OAAO;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,gBAENjB,OAAA;MAAAa,QAAA,EAAG;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC5C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CA1BQD,UAAU;EAAA,QACIH,SAAS;AAAA;AAAAoB,EAAA,GADvBjB,UAAU;AA4BnB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}