{"ast":null,"code":"var _jsxFileName = \"/Users/Wayne/Documents/Test_LF/id-lost-and-found/src/VerifyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VerifyPage() {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the ID from the URL\n  const [inputId, setInputId] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Simulated database for verification\n  const simulatedResults = [{\n    id: 1,\n    name: \"John Doe\",\n    idNumber: \"12345678\",\n    location: \"Library\",\n    contact: \"johndoe@gmail.com\"\n  }, {\n    id: 2,\n    name: \"Jane Smith\",\n    idNumber: \"87654321\",\n    location: \"Cafeteria\",\n    contact: \"janesmith@domain.com\"\n  }];\n\n  // Function to verify the full ID\n  const handleVerify = () => {\n    const selectedId = simulatedResults.find(item => item.id === parseInt(id));\n    if (selectedId && selectedId.idNumber === inputId) {\n      navigate(`/id-info/${id}`); // Redirect to the detailed ID info page\n    } else {\n      setError('Invalid ID number. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verify-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify Your ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputId,\n      onChange: e => setInputId(e.target.value),\n      placeholder: \"Enter the full 8-digit ID number\",\n      className: \"id-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerify,\n      className: \"verify-button\",\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(VerifyPage, \"iLYLTsaicI+2pmYCNz3K+KOFuTk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = VerifyPage;\nexport default VerifyPage;\nvar _c;\n$RefreshReg$(_c, \"VerifyPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","VerifyPage","_s","id","inputId","setInputId","error","setError","navigate","simulatedResults","name","idNumber","location","contact","handleVerify","selectedId","find","item","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/Wayne/Documents/Test_LF/id-lost-and-found/src/VerifyPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nfunction VerifyPage() {\n  const { id } = useParams();  // Get the ID from the URL\n  const [inputId, setInputId] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Simulated database for verification\n  const simulatedResults = [\n    { id: 1, name: \"John Doe\", idNumber: \"12345678\", location: \"Library\", contact: \"johndoe@gmail.com\" },\n    { id: 2, name: \"Jane Smith\", idNumber: \"87654321\", location: \"Cafeteria\", contact: \"janesmith@domain.com\" }\n  ];\n\n  // Function to verify the full ID\n  const handleVerify = () => {\n    const selectedId = simulatedResults.find(item => item.id === parseInt(id));\n    if (selectedId && selectedId.idNumber === inputId) {\n      navigate(`/id-info/${id}`);  // Redirect to the detailed ID info page\n    } else {\n      setError('Invalid ID number. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"verify-container\">\n      <h2>Verify Your ID</h2>\n      <input\n        type=\"text\"\n        value={inputId}\n        onChange={(e) => setInputId(e.target.value)}\n        placeholder=\"Enter the full 8-digit ID number\"\n        className=\"id-input\"\n      />\n      <button onClick={handleVerify} className=\"verify-button\">Verify</button>\n      {error && <p className=\"error-message\">{error}</p>}\n    </div>\n  );\n}\n\nexport default VerifyPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAE;EAC7B,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMW,gBAAgB,GAAG,CACvB;IAAEN,EAAE,EAAE,CAAC;IAAEO,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE,UAAU;IAAEC,QAAQ,EAAE,SAAS;IAAEC,OAAO,EAAE;EAAoB,CAAC,EACpG;IAAEV,EAAE,EAAE,CAAC;IAAEO,IAAI,EAAE,YAAY;IAAEC,QAAQ,EAAE,UAAU;IAAEC,QAAQ,EAAE,WAAW;IAAEC,OAAO,EAAE;EAAuB,CAAC,CAC5G;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,UAAU,GAAGN,gBAAgB,CAACO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACd,EAAE,KAAKe,QAAQ,CAACf,EAAE,CAAC,CAAC;IAC1E,IAAIY,UAAU,IAAIA,UAAU,CAACJ,QAAQ,KAAKP,OAAO,EAAE;MACjDI,QAAQ,CAAC,YAAYL,EAAE,EAAE,CAAC,CAAC,CAAE;IAC/B,CAAC,MAAM;MACLI,QAAQ,CAAC,sCAAsC,CAAC;IAClD;EACF,CAAC;EAED,oBACEP,OAAA;IAAKmB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BpB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAGC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC,kCAAkC;MAC9CX,SAAS,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACFxB,OAAA;MAAQ+B,OAAO,EAAEjB,YAAa;MAACK,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACvElB,KAAK,iBAAIN,OAAA;MAAGmB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACtB,EAAA,CApCQD,UAAU;EAAA,QACFJ,SAAS,EAGPC,WAAW;AAAA;AAAAkC,EAAA,GAJrB/B,UAAU;AAsCnB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}